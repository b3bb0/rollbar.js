{"version":3,"sources":["webpack:///webpack/bootstrap d4c47125f8790b7ec61f","webpack:///./src/bundles/rollbar.snippet.js","webpack:///./src/shim.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB,oBAAoB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO,O;AACP;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,2BAA0B,sBAAsB;AAChD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,gBAAe,qBAAqB;AACpC;AACA;;AAEA;AACA;AACA;AACA","file":"rollbar.snippet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d4c47125f8790b7ec61f\n **/","var Rollbar = require('../shim').Rollbar;\n\nvar defaultRollbarJsUrl = '//d37gvrvc0wt4s1.cloudfront.net/js/v1.2/rollbar.min.js';\n_rollbarConfig.rollbarJsUrl = _rollbarConfig.rollbarJsUrl || defaultRollbarJsUrl;\n\nvar client = Rollbar.init(window, _rollbarConfig);\nclient.loadFull(window, document, false, _rollbarConfig);\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bundles/rollbar.snippet.js\n ** module id = 0\n ** module chunks = 0\n **/","var _shimCounter = 0;\n\nfunction Rollbar(parentShim) {\n  this.shimId = ++_shimCounter;\n  this.notifier = null;\n  this.parentShim = parentShim;\n  this.logger = function() {};\n\n  if (window.console) {\n    if (window.console.shimId === undefined) {\n      this.logger = window.console.log;\n    }\n  }\n}\n\nfunction _rollbarWindowOnError(client, old, args) {\n  if (window._rollbarWrappedError) {\n    if (!args[4]) {\n      args[4] = window._rollbarWrappedError;\n    }\n    if (!args[5]) {\n      args[5] = window._rollbarWrappedError._rollbarContext;\n    }\n    window._rollbarWrappedError = null;\n  }\n\n  client.uncaughtError.apply(client, args);\n  if (old) {\n    old.apply(window, args);\n  }\n}\n\nRollbar.init = function(window, config) {\n  var alias = config.globalAlias || 'Rollbar';\n  if (typeof window[alias] === 'object') {\n    return window[alias];\n  }\n\n  // Expose the global shim queue\n  window._rollbarShimQueue = [];\n  window._rollbarWrappedError = null;\n\n  config = config || {};\n\n  var client = new Rollbar();\n\n  return (_wrapInternalErr(function() {\n    client.configure(config);\n\n    if (config.captureUncaught) {\n      // Create the client and set the onerror handler\n      var old = window.onerror;\n\n      window.onerror = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        _rollbarWindowOnError(client, old, args);\n      };\n\n      // Adapted from https://github.com/bugsnag/bugsnag-js\n      var globals = \"EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload\".split(\",\");\n\n      var i;\n      var global;\n      for (i = 0; i < globals.length; ++i) {\n        global = globals[i];\n\n        if (window[global] && window[global].prototype) {\n          _extendListenerPrototype(client, window[global].prototype);\n        }\n      }\n    }\n\n    // Expose Rollbar globally\n    window[alias] = client;\n    return client;\n  }, client.logger))();\n};\n\nRollbar.prototype.loadFull = function(window, document, immediate, config, callback) {\n  var self = this;\n  // Create the main rollbar script loader\n  var loader = _wrapInternalErr(function() {\n    var s = document.createElement(\"script\");\n    var f = document.getElementsByTagName(\"script\")[0];\n    s.src = config.rollbarJsUrl;\n    s.async = !immediate;\n\n    // NOTE(cory): this may not work for some versions of IE\n    s.onload = handleLoadErr;\n\n    f.parentNode.insertBefore(s, f);\n  }, this.logger);\n\n  var handleLoadErr = _wrapInternalErr(function() {\n    var err;\n    if (window._rollbarPayloadQueue === undefined) {\n      // rollbar.js did not load correctly, call any queued callbacks\n      // with an error.\n      var obj;\n      var cb;\n      var args;\n      var i;\n\n      err = new Error('rollbar.js did not load');\n\n      // Go through each of the shim objects. If one of their args\n      // was a function, treat it as the callback and call it with\n      // err as the first arg.\n      while ((obj = window._rollbarShimQueue.shift())) {\n        args = obj.args;\n        for (i = 0; i < args.length; ++i) {\n          cb = args[i];\n          if (typeof cb === 'function') {\n            cb(err);\n            break;\n          }\n        }\n      }\n    }\n    if (typeof callback === 'function') {\n      callback(err);\n    }\n  }, this.logger);\n\n  (_wrapInternalErr(function() {\n    if (immediate) {\n      loader();\n    } else {\n      // Have the window load up the script ASAP\n      if (window.addEventListener) {\n        window.addEventListener(\"load\", loader, false);\n      } else { \n        window.attachEvent(\"onload\", loader);\n      }\n    }\n  }, this.logger))();\n};\n\nRollbar.prototype.wrap = function(f, context) {\n  try {\n    var _this = this;\n    var ctxFn;\n    if (typeof context === 'function') {\n      ctxFn = context;\n    } else {\n      ctxFn = function() { return context || {}; };\n    }\n\n    if (typeof f !== 'function') {\n      return f;\n    }\n\n    if (f._isWrap) {\n      return f;\n    }\n\n    if (!f._wrapped) {\n      f._wrapped = function () {\n        try {\n          return f.apply(this, arguments);\n        } catch(e) {\n          e._rollbarContext = ctxFn() || {};\n          e._rollbarContext._wrappedSource = f.toString();\n\n          window._rollbarWrappedError = e;\n          throw e;\n        }\n      };\n\n      f._wrapped._isWrap = true;\n\n      for (var prop in f) {\n        if (f.hasOwnProperty(prop)) {\n          f._wrapped[prop] = f[prop];\n        }\n      }\n    }\n\n    return f._wrapped;\n  } catch (e) {\n    // Try-catch here is to work around issue where wrap() fails when used inside Selenium.\n    // Return the original function if the wrap fails.\n    return f;\n  }\n};\n\n// Stub out rollbar.js methods\nfunction stub(method) {\n  var R = Rollbar;\n  return _wrapInternalErr(function() {\n    if (this.notifier) {\n      return this.notifier[method].apply(this.notifier, arguments);\n    } else {\n      var shim = this;\n      var isScope = method === 'scope';\n      if (isScope) {\n        shim = new R(this);\n      }\n      var args = Array.prototype.slice.call(arguments, 0);\n      var data = {shim: shim, method: method, args: args, ts: new Date()};\n      window._rollbarShimQueue.push(data);\n\n      if (isScope) {\n        return shim;\n      }\n    }\n  });\n}\n\nfunction _extendListenerPrototype(client, prototype) {\n  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n    var oldAddEventListener = prototype.addEventListener;\n    prototype.addEventListener = function(event, callback, bubble) {\n      oldAddEventListener.call(this, event, client.wrap(callback), bubble);\n    };\n\n    var oldRemoveEventListener = prototype.removeEventListener;\n    prototype.removeEventListener = function(event, callback, bubble) {\n      oldRemoveEventListener.call(this, event, (callback && callback._wrapped) ? callback._wrapped : callback, bubble);\n    };\n  }\n}\n\nfunction _wrapInternalErr(f, logger) {\n  logger = logger || this.logger;\n  return function() {\n    try {\n      return f.apply(this, arguments);\n    } catch (e) {\n      logger('Rollbar internal error:', e);\n    }\n  };\n}\n\nvar _methods = 'log,debug,info,warn,warning,error,critical,global,configure,scope,uncaughtError'.split(',');\nfor (var i = 0; i < _methods.length; ++i) {\n  Rollbar.prototype[_methods[i]] = stub(_methods[i]);\n}\n\nmodule.exports = {\n  Rollbar: Rollbar,\n  _rollbarWindowOnError: _rollbarWindowOnError\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/shim.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}